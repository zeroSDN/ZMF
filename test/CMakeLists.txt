cmake_minimum_required(VERSION 3.2)
project(zmf_UT)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

include_directories("../zmf")
include_directories("/home/zsdn/zsdn-git/dependencies/include")
link_directories("/home/zsdn/zsdn-git/dependencies/lib")

FIND_PATH(CPPUNIT_INCLUDE_DIRS cppunit/TestCase.h
        /usr/local/include
        /usr/include
)

FIND_LIBRARY(CPPUNIT_LIBRARIES cppunit
        ${CPPUNIT_INCLUDE_DIRS}/../lib
        /usr/local/lib
        /usr/lib)

IF (CPPUNIT_INCLUDE_DIRS)
    IF (CPPUNIT_LIBRARIES)
        SET(CPPUNIT_FOUND "YES")
        SET(CPPUNIT_LIBRARIES ${CPPUNIT_LIBRARIES} ${CMAKE_DL_LIBS})
    ENDIF (CPPUNIT_LIBRARIES)
ENDIF (CPPUNIT_INCLUDE_DIRS)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O3 -D_DEBUG")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -g -O0 -Wall -fprofile-arcs -ftest-coverage -O3 -D_DEBUG")
#set(CMAKE_EXE_LINKER_FLAGS " -fprofile-arcs -ftest-coverage")

set(SOURCE_FILES main.cpp)

# ZMF directories to be tested
FILE(GLOB TEST_FILES_DIRS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
        "../zmf/*.*"
        "../zmf/core/*.*"
        "../zmf/config/*.*"
        "../zmf/discovery/*.*"
        "../zmf/instance/*.*"
        "../zmf/data/*.*"
        "../zmf/logging/*.*"
        "../zmf/discovery_implementation/*.*"
        "../zmf/discovery_mock/*.*"
        "../zmf/mock/*.*"
        "../zmf/messaging/*.*"
        "../zmf/messaging_implementation/*.*"
        "../zmf/messaging_mock/*.*"
        "../zmf/proto/*.*"
        "../zmf/util/*.*")
# Here you can include entire directories

set(TEST_FILES
        ${TEST_FILES_DIRS}
# Here you can manually include files
)

# get every dependency from autogenerated dependencies
FILE(GLOB AUTOGENERATED_DEPENDENCIES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../zmf/autogenerated_dependencies/*.*")


# Evil
#FILE(GLOB_RECURSE ZMF_FILES_2 RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ../zmf*.hpp ../zmf*.h ../zmf/*.cpp ../zmf*.cc )
#list(REMOVE_ITEM ZMF_FILES_2 "/home/zsdn/zsdn-git/zmf/zmf/CMakeFiles/3.2.1/CompilerIdCXX/CMakeCXXCompilerId.cpp")


add_executable(zmf_UT ${SOURCE_FILES} ${AUTOGENERATED_DEPENDENCIES} ${TEST_FILES}
        PeerDiscoveryTests.cpp
        PeerDiscoveryTests.h
        PeerRegistryTests.cpp
        PeerRegistryTests.h
        TestModuleA.cpp
        TestModuleA.h
        TestModuleP.cpp
        TestModuleP.h
        zmfMessagingTests.cpp
        zmfMessagingTests.h
        zmfTests.cpp
        zmfTests.h
        zmqTests.cpp
        zmqTests.h
        DummyModule.h
        zmfInteroptTest.cpp
        zmfInteroptTest.h
        ZmfStressTest.cpp
        ZmfStressTest.h
        TestModule.hpp)

target_link_libraries(zmf_UT cppunit PocoFoundation PocoNet PocoUtil protobuf zmq zmqpp)
