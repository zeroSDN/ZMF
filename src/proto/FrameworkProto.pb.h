// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameworkProto.proto

#ifndef PROTOBUF_FrameworkProto_2eproto__INCLUDED
#define PROTOBUF_FrameworkProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace zmf {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FrameworkProto_2eproto();
void protobuf_AssignDesc_FrameworkProto_2eproto();
void protobuf_ShutdownFile_FrameworkProto_2eproto();

class SenderId;
class StateBroadcast;

// ===================================================================

class SenderId : public ::google::protobuf::Message {
 public:
  SenderId();
  virtual ~SenderId();

  SenderId(const SenderId& from);

  inline SenderId& operator=(const SenderId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SenderId& default_instance();

  void Swap(SenderId* other);

  // implements Message ----------------------------------------------

  SenderId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SenderId& from);
  void MergeFrom(const SenderId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 typeId = 1;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::uint32 typeid_() const;
  inline void set_typeid_(::google::protobuf::uint32 value);

  // required uint64 instanceId = 2;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 2;
  inline ::google::protobuf::uint64 instanceid() const;
  inline void set_instanceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zmf.proto.SenderId)
 private:
  inline void set_has_typeid_();
  inline void clear_has_typeid_();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 instanceid_;
  ::google::protobuf::uint32 typeid__;
  friend void  protobuf_AddDesc_FrameworkProto_2eproto();
  friend void protobuf_AssignDesc_FrameworkProto_2eproto();
  friend void protobuf_ShutdownFile_FrameworkProto_2eproto();

  void InitAsDefaultInstance();
  static SenderId* default_instance_;
};
// -------------------------------------------------------------------

class StateBroadcast : public ::google::protobuf::Message {
 public:
  StateBroadcast();
  virtual ~StateBroadcast();

  StateBroadcast(const StateBroadcast& from);

  inline StateBroadcast& operator=(const StateBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateBroadcast& default_instance();

  void Swap(StateBroadcast* other);

  // implements Message ----------------------------------------------

  StateBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateBroadcast& from);
  void MergeFrom(const StateBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 zmqPubPort = 1;
  inline bool has_zmqpubport() const;
  inline void clear_zmqpubport();
  static const int kZmqPubPortFieldNumber = 1;
  inline ::google::protobuf::uint32 zmqpubport() const;
  inline void set_zmqpubport(::google::protobuf::uint32 value);

  // required uint32 zmqRepPort = 2;
  inline bool has_zmqrepport() const;
  inline void clear_zmqrepport();
  static const int kZmqRepPortFieldNumber = 2;
  inline ::google::protobuf::uint32 zmqrepport() const;
  inline void set_zmqrepport(::google::protobuf::uint32 value);

  // required .zmf.proto.SenderId senderId = 3;
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderIdFieldNumber = 3;
  inline const ::zmf::proto::SenderId& senderid() const;
  inline ::zmf::proto::SenderId* mutable_senderid();
  inline ::zmf::proto::SenderId* release_senderid();
  inline void set_allocated_senderid(::zmf::proto::SenderId* senderid);

  // required string senderName = 4;
  inline bool has_sendername() const;
  inline void clear_sendername();
  static const int kSenderNameFieldNumber = 4;
  inline const ::std::string& sendername() const;
  inline void set_sendername(const ::std::string& value);
  inline void set_sendername(const char* value);
  inline void set_sendername(const char* value, size_t size);
  inline ::std::string* mutable_sendername();
  inline ::std::string* release_sendername();
  inline void set_allocated_sendername(::std::string* sendername);

  // required uint32 version = 5;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 5;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required uint32 lifecycleState = 6;
  inline bool has_lifecyclestate() const;
  inline void clear_lifecyclestate();
  static const int kLifecycleStateFieldNumber = 6;
  inline ::google::protobuf::uint32 lifecyclestate() const;
  inline void set_lifecyclestate(::google::protobuf::uint32 value);

  // optional uint32 additionalLifecycleInfos = 7;
  inline bool has_additionallifecycleinfos() const;
  inline void clear_additionallifecycleinfos();
  static const int kAdditionalLifecycleInfosFieldNumber = 7;
  inline ::google::protobuf::uint32 additionallifecycleinfos() const;
  inline void set_additionallifecycleinfos(::google::protobuf::uint32 value);

  // optional bytes additionalStateInfos = 8;
  inline bool has_additionalstateinfos() const;
  inline void clear_additionalstateinfos();
  static const int kAdditionalStateInfosFieldNumber = 8;
  inline const ::std::string& additionalstateinfos() const;
  inline void set_additionalstateinfos(const ::std::string& value);
  inline void set_additionalstateinfos(const char* value);
  inline void set_additionalstateinfos(const void* value, size_t size);
  inline ::std::string* mutable_additionalstateinfos();
  inline ::std::string* release_additionalstateinfos();
  inline void set_allocated_additionalstateinfos(::std::string* additionalstateinfos);

  // required uint32 multicastIdentifier = 9;
  inline bool has_multicastidentifier() const;
  inline void clear_multicastidentifier();
  static const int kMulticastIdentifierFieldNumber = 9;
  inline ::google::protobuf::uint32 multicastidentifier() const;
  inline void set_multicastidentifier(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zmf.proto.StateBroadcast)
 private:
  inline void set_has_zmqpubport();
  inline void clear_has_zmqpubport();
  inline void set_has_zmqrepport();
  inline void clear_has_zmqrepport();
  inline void set_has_senderid();
  inline void clear_has_senderid();
  inline void set_has_sendername();
  inline void clear_has_sendername();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_lifecyclestate();
  inline void clear_has_lifecyclestate();
  inline void set_has_additionallifecycleinfos();
  inline void clear_has_additionallifecycleinfos();
  inline void set_has_additionalstateinfos();
  inline void clear_has_additionalstateinfos();
  inline void set_has_multicastidentifier();
  inline void clear_has_multicastidentifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zmqpubport_;
  ::google::protobuf::uint32 zmqrepport_;
  ::zmf::proto::SenderId* senderid_;
  ::std::string* sendername_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 lifecyclestate_;
  ::std::string* additionalstateinfos_;
  ::google::protobuf::uint32 additionallifecycleinfos_;
  ::google::protobuf::uint32 multicastidentifier_;
  friend void  protobuf_AddDesc_FrameworkProto_2eproto();
  friend void protobuf_AssignDesc_FrameworkProto_2eproto();
  friend void protobuf_ShutdownFile_FrameworkProto_2eproto();

  void InitAsDefaultInstance();
  static StateBroadcast* default_instance_;
};
// ===================================================================


// ===================================================================

// SenderId

// required uint32 typeId = 1;
inline bool SenderId::has_typeid_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SenderId::set_has_typeid_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SenderId::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SenderId::clear_typeid_() {
  typeid__ = 0u;
  clear_has_typeid_();
}
inline ::google::protobuf::uint32 SenderId::typeid_() const {
  // @@protoc_insertion_point(field_get:zmf.proto.SenderId.typeId)
  return typeid__;
}
inline void SenderId::set_typeid_(::google::protobuf::uint32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.SenderId.typeId)
}

// required uint64 instanceId = 2;
inline bool SenderId::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SenderId::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SenderId::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SenderId::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
inline ::google::protobuf::uint64 SenderId::instanceid() const {
  // @@protoc_insertion_point(field_get:zmf.proto.SenderId.instanceId)
  return instanceid_;
}
inline void SenderId::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.SenderId.instanceId)
}

// -------------------------------------------------------------------

// StateBroadcast

// required uint32 zmqPubPort = 1;
inline bool StateBroadcast::has_zmqpubport() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateBroadcast::set_has_zmqpubport() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StateBroadcast::clear_has_zmqpubport() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StateBroadcast::clear_zmqpubport() {
  zmqpubport_ = 0u;
  clear_has_zmqpubport();
}
inline ::google::protobuf::uint32 StateBroadcast::zmqpubport() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.zmqPubPort)
  return zmqpubport_;
}
inline void StateBroadcast::set_zmqpubport(::google::protobuf::uint32 value) {
  set_has_zmqpubport();
  zmqpubport_ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.zmqPubPort)
}

// required uint32 zmqRepPort = 2;
inline bool StateBroadcast::has_zmqrepport() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateBroadcast::set_has_zmqrepport() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StateBroadcast::clear_has_zmqrepport() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StateBroadcast::clear_zmqrepport() {
  zmqrepport_ = 0u;
  clear_has_zmqrepport();
}
inline ::google::protobuf::uint32 StateBroadcast::zmqrepport() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.zmqRepPort)
  return zmqrepport_;
}
inline void StateBroadcast::set_zmqrepport(::google::protobuf::uint32 value) {
  set_has_zmqrepport();
  zmqrepport_ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.zmqRepPort)
}

// required .zmf.proto.SenderId senderId = 3;
inline bool StateBroadcast::has_senderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateBroadcast::set_has_senderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StateBroadcast::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StateBroadcast::clear_senderid() {
  if (senderid_ != NULL) senderid_->::zmf::proto::SenderId::Clear();
  clear_has_senderid();
}
inline const ::zmf::proto::SenderId& StateBroadcast::senderid() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.senderId)
  return senderid_ != NULL ? *senderid_ : *default_instance_->senderid_;
}
inline ::zmf::proto::SenderId* StateBroadcast::mutable_senderid() {
  set_has_senderid();
  if (senderid_ == NULL) senderid_ = new ::zmf::proto::SenderId;
  // @@protoc_insertion_point(field_mutable:zmf.proto.StateBroadcast.senderId)
  return senderid_;
}
inline ::zmf::proto::SenderId* StateBroadcast::release_senderid() {
  clear_has_senderid();
  ::zmf::proto::SenderId* temp = senderid_;
  senderid_ = NULL;
  return temp;
}
inline void StateBroadcast::set_allocated_senderid(::zmf::proto::SenderId* senderid) {
  delete senderid_;
  senderid_ = senderid;
  if (senderid) {
    set_has_senderid();
  } else {
    clear_has_senderid();
  }
  // @@protoc_insertion_point(field_set_allocated:zmf.proto.StateBroadcast.senderId)
}

// required string senderName = 4;
inline bool StateBroadcast::has_sendername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StateBroadcast::set_has_sendername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StateBroadcast::clear_has_sendername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StateBroadcast::clear_sendername() {
  if (sendername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_->clear();
  }
  clear_has_sendername();
}
inline const ::std::string& StateBroadcast::sendername() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.senderName)
  return *sendername_;
}
inline void StateBroadcast::set_sendername(const ::std::string& value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.senderName)
}
inline void StateBroadcast::set_sendername(const char* value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
  // @@protoc_insertion_point(field_set_char:zmf.proto.StateBroadcast.senderName)
}
inline void StateBroadcast::set_sendername(const char* value, size_t size) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:zmf.proto.StateBroadcast.senderName)
}
inline ::std::string* StateBroadcast::mutable_sendername() {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:zmf.proto.StateBroadcast.senderName)
  return sendername_;
}
inline ::std::string* StateBroadcast::release_sendername() {
  clear_has_sendername();
  if (sendername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sendername_;
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StateBroadcast::set_allocated_sendername(::std::string* sendername) {
  if (sendername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendername_;
  }
  if (sendername) {
    set_has_sendername();
    sendername_ = sendername;
  } else {
    clear_has_sendername();
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:zmf.proto.StateBroadcast.senderName)
}

// required uint32 version = 5;
inline bool StateBroadcast::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StateBroadcast::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StateBroadcast::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StateBroadcast::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 StateBroadcast::version() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.version)
  return version_;
}
inline void StateBroadcast::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.version)
}

// required uint32 lifecycleState = 6;
inline bool StateBroadcast::has_lifecyclestate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StateBroadcast::set_has_lifecyclestate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StateBroadcast::clear_has_lifecyclestate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StateBroadcast::clear_lifecyclestate() {
  lifecyclestate_ = 0u;
  clear_has_lifecyclestate();
}
inline ::google::protobuf::uint32 StateBroadcast::lifecyclestate() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.lifecycleState)
  return lifecyclestate_;
}
inline void StateBroadcast::set_lifecyclestate(::google::protobuf::uint32 value) {
  set_has_lifecyclestate();
  lifecyclestate_ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.lifecycleState)
}

// optional uint32 additionalLifecycleInfos = 7;
inline bool StateBroadcast::has_additionallifecycleinfos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StateBroadcast::set_has_additionallifecycleinfos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StateBroadcast::clear_has_additionallifecycleinfos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StateBroadcast::clear_additionallifecycleinfos() {
  additionallifecycleinfos_ = 0u;
  clear_has_additionallifecycleinfos();
}
inline ::google::protobuf::uint32 StateBroadcast::additionallifecycleinfos() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.additionalLifecycleInfos)
  return additionallifecycleinfos_;
}
inline void StateBroadcast::set_additionallifecycleinfos(::google::protobuf::uint32 value) {
  set_has_additionallifecycleinfos();
  additionallifecycleinfos_ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.additionalLifecycleInfos)
}

// optional bytes additionalStateInfos = 8;
inline bool StateBroadcast::has_additionalstateinfos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StateBroadcast::set_has_additionalstateinfos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StateBroadcast::clear_has_additionalstateinfos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StateBroadcast::clear_additionalstateinfos() {
  if (additionalstateinfos_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    additionalstateinfos_->clear();
  }
  clear_has_additionalstateinfos();
}
inline const ::std::string& StateBroadcast::additionalstateinfos() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.additionalStateInfos)
  return *additionalstateinfos_;
}
inline void StateBroadcast::set_additionalstateinfos(const ::std::string& value) {
  set_has_additionalstateinfos();
  if (additionalstateinfos_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    additionalstateinfos_ = new ::std::string;
  }
  additionalstateinfos_->assign(value);
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.additionalStateInfos)
}
inline void StateBroadcast::set_additionalstateinfos(const char* value) {
  set_has_additionalstateinfos();
  if (additionalstateinfos_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    additionalstateinfos_ = new ::std::string;
  }
  additionalstateinfos_->assign(value);
  // @@protoc_insertion_point(field_set_char:zmf.proto.StateBroadcast.additionalStateInfos)
}
inline void StateBroadcast::set_additionalstateinfos(const void* value, size_t size) {
  set_has_additionalstateinfos();
  if (additionalstateinfos_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    additionalstateinfos_ = new ::std::string;
  }
  additionalstateinfos_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:zmf.proto.StateBroadcast.additionalStateInfos)
}
inline ::std::string* StateBroadcast::mutable_additionalstateinfos() {
  set_has_additionalstateinfos();
  if (additionalstateinfos_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    additionalstateinfos_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:zmf.proto.StateBroadcast.additionalStateInfos)
  return additionalstateinfos_;
}
inline ::std::string* StateBroadcast::release_additionalstateinfos() {
  clear_has_additionalstateinfos();
  if (additionalstateinfos_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = additionalstateinfos_;
    additionalstateinfos_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StateBroadcast::set_allocated_additionalstateinfos(::std::string* additionalstateinfos) {
  if (additionalstateinfos_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete additionalstateinfos_;
  }
  if (additionalstateinfos) {
    set_has_additionalstateinfos();
    additionalstateinfos_ = additionalstateinfos;
  } else {
    clear_has_additionalstateinfos();
    additionalstateinfos_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:zmf.proto.StateBroadcast.additionalStateInfos)
}

// required uint32 multicastIdentifier = 9;
inline bool StateBroadcast::has_multicastidentifier() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StateBroadcast::set_has_multicastidentifier() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StateBroadcast::clear_has_multicastidentifier() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StateBroadcast::clear_multicastidentifier() {
  multicastidentifier_ = 0u;
  clear_has_multicastidentifier();
}
inline ::google::protobuf::uint32 StateBroadcast::multicastidentifier() const {
  // @@protoc_insertion_point(field_get:zmf.proto.StateBroadcast.multicastIdentifier)
  return multicastidentifier_;
}
inline void StateBroadcast::set_multicastidentifier(::google::protobuf::uint32 value) {
  set_has_multicastidentifier();
  multicastidentifier_ = value;
  // @@protoc_insertion_point(field_set:zmf.proto.StateBroadcast.multicastIdentifier)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace zmf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FrameworkProto_2eproto__INCLUDED
